[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

# Self-descriptive entries which should always be present
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "tax_myphage"
description = "Script to assign taxonomy to a bacteriophage at the genus and species level"
dynamic = ["version"]
readme = "README.md"
authors = [
    { name = "Andrew Millard, Thomas Sicheritz-Ponten and Remi Denise", email = "adm39@leicester.ac.uk" }
]
license = { text = "MIT" }
# See https://pypi.org/classifiers/
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.8"
# Declare any run-time dependencies that should be installed with the package.
#dependencies = [
#    "importlib-resources;python_version<'3.11'",
#]

# Update the urls once the hosting is set up.
#[project.urls]
#"Source" = "https://github.com/<username>/tax_myphage/"
#"Documentation" = "https://tax_myphage.readthedocs.io/"

[project.optional-dependencies]
test = [
  "pytest>=6.1.2",
  "pytest-runner"
]

[tool.setuptools]
# This subkey is a beta stage development and keys may change in the future, see https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html for more details
#
# As of version 0.971, mypy does not support type checking of installed zipped
# packages (because it does not actually import the Python packages).
# We declare the package not-zip-safe so that our type hints are also available
# when checking client code that uses our (installed) package.
# Ref:
# https://mypy.readthedocs.io/en/stable/installed_packages.html?highlight=zip#using-installed-packages-with-mypy-pep-561
zip-safe = false
# Let setuptools discover the package in the current directory,
# but be explicit about non-Python files.
# See also:
#   https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration
# Note that behavior is currently evolving with respect to how to interpret the
# "data" and "tests" subdirectories. As of setuptools 63, both are automatically
# included if namespaces is true (default), even if the package is named explicitly
# (instead of using 'find'). With 'find', the 'tests' subpackage is discovered
# recursively because of its __init__.py file, but the data subdirectory is excluded
# with include-package-data = false and namespaces = false.
include-package-data = false
[tool.setuptools.packages.find]
namespaces = false
where = ["."]

# Ref https://setuptools.pypa.io/en/latest/userguide/datafiles.html#package-data
[tool.setuptools.package-data]
tax_myphage = [
    "py.typed"
]

[tool.flake8]
max-line-length = "100"
ignore = "E122,E123,E126,E127,E128,E731,E722"
exclude = "build,tax_myPHAGE/_version.py,tests,conda.recipe,.git,versioneer.py,benchmarks,.asv"

[tool.pytest.ini_options]
norecursedirs = [".*", "*.egg*", "build", "dist", "conda.recipe"]
addopts = """
--junitxml=junit.xml
--ignore setup.py
--ignore run_test.py
--cov-report term-missing
--tb native
--strict-markers
--durations=20"""
markers = ["serial: execute test serially (to avoid race conditions)"]

[tool.versioneer]
vcs = "git"
versionfile_source = "tax_myPHAGE/_version.py"
versionfile_build = "tax_myPHAGE/_version.py"
tag_prefix = ""
parentdir_prefix = "tax_myPHAGE-"

[tool.distutils.bdist_wheel]
universal = 1

