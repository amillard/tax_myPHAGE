[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "taxmyphage"
description = "Script to assign taxonomy to a bacteriophage at the genus and species level"
version = "0.0.0"

authors = [
    "Andrew Millard <adm39@leicester.ac.uk>",
    "Thomas Sicheritz-Ponten <thomassp@sund.ku.dk>",
    "Remi Denise"
    ]

readme = "README.md"
homepage = "https://github.com/amillard/tax_myPHAGE"
repository = "https://github.com/amillard/tax_myPHAGE"
keywords = ["Phage", "Scientific/Engineering", "Bio-Informatics", "Taxonomy", "Bacteriophage"]
license = "MIT"

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX",
    "Environment :: Console",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

# If your project structure differs from the standard one supported by poetry, 
# you can specify the packages you want to include in the final distribution.
packages = [
    {include = "taxmyphage"}
    ]

include = [
    "CONTRIBUTORS.md",
    ]

exclude = [
    ".git*",
    "*.pyc",
    "*__pycache__*",
    "upload*",
    "test*",
    "conda*",
    "Benchmark*",
    ".coverage*",
    "maybe*",
    "*old*",
    "*data*",
    ]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
biopython = "^1.81"
pandas = "^2.1.1"
numpy = "^1.26.0"
matplotlib = "^3.8.0"
seaborn = "^0.13"
wget = "^3.2"
scipy = "^1.11.3"
tqdm = "^4.66.1"
openpyxl = "^3.1.2"
networkx = "^3.1"
icecream = "^2.1.3"
importlib_metadata = "^6.8.0"
zipp = "^3.17.0"

[tool.poetry.group.test.dependencies]
pytest = "^6.2.5"
pytest-runner = "^5.3.1"

[tool.poetry.scripts]
taxmyphage = 'taxmyphage.__main__:main'

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/amillard/taxy_myPHAGE/issues"

[tool.pytest.ini_options]
norecursedirs = [".*", "*.egg*", "build", "dist", "conda.recipe"]
addopts = """
--junitxml=junit.xml
--ignore setup.py
--ignore run_test.py
--cov-report term-missing
--tb native
--strict-markers
--durations=20"""
markers = ["serial: execute test serially (to avoid race conditions)"]

[tool.distutils.bdist_wheel]
universal = 1